{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\one\\\\stua-movie-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          movies\n        }\n      } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\"); // console.log(movies.data.data.movies)\n      // es6\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }\n    }, isLoading ? \"Loading...\" : \"We are ready\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/one/stua-movie-app/src/App.js"],"names":["React","PropTypes","axios","App","Component","state","isLoading","movies","getMovies","data","get","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADuB;;AAAA,SAS/BC,SAT+B,GASnB,YAAY;AACtB,YAAM;AAACC,QAAAA,IAAI,EAAE;AAACF,UAAAA;AAAD;AAAP,UAAoB,MAAML,KAAK,CAACQ,GAAN,CAAU,wDAAV,CAAhC,CADsB,CAEtB;AACA;AACD,KAb8B;AAAA;;AAc/BC,EAAAA,iBAAiB,GAAE;AACjB,SAAKH,SAAL;AACD;;AACDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACF,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,SAAS,GAAG,YAAH,GAAkB,cAAjC,CAAP;AACC;;AApB8B;;AAwBjC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  // async , await 으로 비동기 시\n  // function 앞에 async를 붙이면 해당 함수는 항상 프라미스를 반환합니다.\n  // await는 async 함수 안에서만 동작합니다.\n  getMovies = async () => {\n    const {data: {movies}}  = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\")\n    // console.log(movies.data.data.movies)\n    // es6\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n  render() {\n    const { isLoading } = this.state;\n  return <div>{isLoading ? \"Loading...\" : \"We are ready\"}</div>;\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}