{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\one\\\\stua-movie-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // function Food({name} ) {\n// // function Food({fav}) {\n//   return <h1> i like {name} </h1>;\n//   // return <h1> i like {fav} </h1>\n// }\n// const foodILike = [\n//   {\n//     name : \"kimchi\",\n//     img : \"1123\"\n//   },\n//   {\n//     name : \"bab\",\n//     img : \"2222\"\n//   }\n// ];\n// function component\n// function App() {\n//   return (\n//       <div>\n//       {foodILike.map(dish => (\n//         <Food name={dish.name} />\n//       ))}\n//       </div>\n//     );\n// }\n// class componet\n// state 는 obejct 이고 component의 data를 넣을 공간이 있고 데이터는 변할 수 있다.\n// \n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.add = () => {\n      // javaScript 문법\n      console.log(\"add\");\n      this.setState(current => {\n        count: this.state.count + 1;\n      });\n    };\n\n    this.minus = () => {\n      console.log(\"minus\");\n      this.setState({\n        count: this.state.count - 1\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"The numver is: \", this.state.count), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.minus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Minus\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/one/stua-movie-app/src/App.js"],"names":["React","PropTypes","App","Component","state","count","add","console","log","setState","current","minus","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,KAAK,EAAE;AADD,KADuB;;AAAA,SAI/BC,GAJ+B,GAIzB,MAAM;AAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,WAAKC,QAAL,CAAcC,OAAO,IAAI;AAACL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAAnB;AAAqB,OAAtD;AACD,KAP8B;;AAAA,SAQ/BM,KAR+B,GAQvB,MAAM;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,OAAd;AACD,KAX8B;AAAA;;AAY/BO,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoB,KAAKR,KAAL,CAAWC,KAA/B,CADF,eAEE;AAAQ,MAAA,OAAO,EAAI,KAAKC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAQ,MAAA,OAAO,EAAI,KAAKK,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAQC;;AArB4B;;AAwBjC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// function Food({name} ) {\n// // function Food({fav}) {\n//   return <h1> i like {name} </h1>;\n//   // return <h1> i like {fav} </h1>\n// }\n\n// const foodILike = [\n//   {\n//     name : \"kimchi\",\n//     img : \"1123\"\n//   },\n//   {\n//     name : \"bab\",\n//     img : \"2222\"\n//   }\n\n// ];\n\n// function component\n// function App() {\n//   return (\n//       <div>\n//       {foodILike.map(dish => (\n//         <Food name={dish.name} />\n//       ))}\n//       </div>\n//     );\n// }\n\n// class componet\n// state 는 obejct 이고 component의 data를 넣을 공간이 있고 데이터는 변할 수 있다.\n// \nclass App extends React.Component{\n  state = {\n    count: 0\n  };\n  add = () => { // javaScript 문법\n    console.log(\"add\");\n    this.setState(current => {count: this.state.count + 1});\n  };\n  minus = () => {\n    console.log(\"minus\");\n    this.setState({count: this.state.count - 1});\n  };\n  render(){\n    return (\n      <div>\n        <h1>The numver is: {this.state.count}</h1>\n        <button onClick = {this.add}>Add</button>\n        <button onClick = {this.minus}>Minus</button>\n      </div>\n    )\n  \n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}