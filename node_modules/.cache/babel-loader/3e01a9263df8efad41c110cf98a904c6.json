{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\one\\\\STUA-MOVIE-APP\\\\src\\\\App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie.js';\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      // es6 표기방법\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"); // console.log(movies.data.data.movies)\n\n      console.log(movies);\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"loader__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"is loading...\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, movies.map(movie => /*#__PURE__*/React.createElement(Movie, {\n      key: movie.id,\n      id: movie.id,\n      year: movie.year,\n      title: movie.title,\n      summary: movie.summary,\n      poster: movie.medium_cover_image,\n      genres: movie.genres,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/one/STUA-MOVIE-APP/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","console","log","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADuB;;AAAA,SAS/BC,SAT+B,GASnB,YAAY;AACtB;AACA,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJA,UAAAA,IAAI,EAAE;AAACF,YAAAA;AAAD;AADF;AADF,UAID,MAAMN,KAAK,CAACS,GAAN,CAAU,uEAAV,CAJX,CAFsB,CAOtB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,WAAKM,QAAL,CAAc;AAACN,QAAAA,MAAD;AAASD,QAAAA,SAAS,EAAC;AAAnB,OAAd;AAED,KApB8B;AAAA;;AAqB/BQ,EAAAA,iBAAiB,GAAE;AACjB,SAAKN,SAAL;AACD;;AACDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAwB,KAAKF,KAAnC;AACA,wBACA;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,SAAS,gBACV;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADU,gBAKV;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIC,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACd,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,EAAE,EAAED,KAAK,CAACC,EAFZ;AAGE,MAAA,IAAI,EAAED,KAAK,CAACE,IAHd;AAIE,MAAA,KAAK,EAAEF,KAAK,CAACG,KAJf;AAKE,MAAA,OAAO,EAAEH,KAAK,CAACI,OALjB;AAME,MAAA,MAAM,EAAEJ,KAAK,CAACK,kBANhB;AAOE,MAAA,MAAM,EAAEL,KAAK,CAACM,MAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CANF,CADA;AA2BG;;AArD0B;;AA0DjC,eAAepB,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie.js';\nimport \"./App.css\";\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  // async , await 으로 비동기 시\n  // function 앞에 async를 붙이면 해당 함수는 항상 프라미스를 반환합니다.\n  // await는 async 함수 안에서만 동작합니다.\n  getMovies = async () => {\n    // es6 표기방법\n    const {\n      data: {\n        data: {movies}\n      }\n    }  = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\")\n    // console.log(movies.data.data.movies)\n    console.log(movies)\n    this.setState({movies, isLoading:false});\n\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n    <section className=\"container\">\n      {isLoading \n    ? <div className=\"loader\"> \n        <span className=\"loader__text\">is loading...</span>\n      </div>\n    : (\n      <div className=\"movies\">\n        {\n          movies.map(movie => (\n            <Movie \n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n            )\n          )\n        }\n      </div>        \n      \n      )}\n      </section>\n    );\n      }\n    }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}