{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\one\\\\stua-movie-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // 2장 내용\n// function Food({name} ) {\n// // function Food({fav}) {\n//   return <h1> i like {name} </h1>;\n//   // return <h1> i like {fav} </h1>\n// }\n// const foodILike = [\n//   {\n//     name : \"kimchi\",\n//     img : \"1123\"\n//   },\n//   {\n//     name : \"bab\",\n//     img : \"2222\"\n//   }\n// ];\n// function component\n// function App() {\n//   return (\n//       <div>\n//       {foodILike.map(dish => (\n//         <Food name={dish.name} />\n//       ))}\n//       </div>\n//     );\n// }\n// 2장 끝\n// class componet\n// state 는 obejct 이고 component의 data를 넣을 공간이 있고 데이터는 변할 수 있다.\n// 생명주기 3.2장\n// 마운팅: 컴포넌트가 mount될 때, 컴포넌트가 스크린에 표시될때, 컴포넌트가 웹세아트에 갈 때 컨스트럭토를 호출한다.\n// 업데이팅 : 될때 \n// class App extends React.Component{\n//   state = {\n//     count: 0\n//   };\n//   add = () => { // javaScript 문법\n//     console.log(\"add\");\n//     this.setState(current => ({count: current.count + 1}));\n//   };\n//   minus = () => {\n//     console.log(\"minus\");\n//     this.setState(current => ({count: current.count - 1}));\n//   };\n//   render(){\n//     return (\n//       <div>\n//         <h1>The numver is: {this.state.count}</h1>\n//         <button onClick = {this.add}>Add</button>\n//         <button onClick = {this.minus}>Minus</button>\n//       </div>\n//     )\n//     }\n// }\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoading: false\n      });\n    }, 6000);\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }\n    }, isLoading ? \"Loading...\" : \"We are ready\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/one/stua-movie-app/src/App.js"],"names":["React","PropTypes","App","Component","state","isLoading","movies","componentDidMount","setTimeout","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADuB;AAAA;;AAK/BC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AACDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACF,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,SAAS,GAAG,YAAH,GAAkB,cAAjC,CAAP;AACC;;AAb8B;;AAgBjC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// 2장 내용\n// function Food({name} ) {\n// // function Food({fav}) {\n//   return <h1> i like {name} </h1>;\n//   // return <h1> i like {fav} </h1>\n// }\n\n// const foodILike = [\n//   {\n//     name : \"kimchi\",\n//     img : \"1123\"\n//   },\n//   {\n//     name : \"bab\",\n//     img : \"2222\"\n//   }\n\n// ];\n\n// function component\n// function App() {\n//   return (\n//       <div>\n//       {foodILike.map(dish => (\n//         <Food name={dish.name} />\n//       ))}\n//       </div>\n//     );\n// }\n// 2장 끝\n\n// class componet\n// state 는 obejct 이고 component의 data를 넣을 공간이 있고 데이터는 변할 수 있다.\n// 생명주기 3.2장\n// 마운팅: 컴포넌트가 mount될 때, 컴포넌트가 스크린에 표시될때, 컴포넌트가 웹세아트에 갈 때 컨스트럭토를 호출한다.\n// 업데이팅 : 될때 \n// class App extends React.Component{\n//   state = {\n//     count: 0\n//   };\n//   add = () => { // javaScript 문법\n//     console.log(\"add\");\n//     this.setState(current => ({count: current.count + 1}));\n//   };\n//   minus = () => {\n//     console.log(\"minus\");\n//     this.setState(current => ({count: current.count - 1}));\n//   };\n//   render(){\n//     return (\n//       <div>\n//         <h1>The numver is: {this.state.count}</h1>\n//         <button onClick = {this.add}>Add</button>\n//         <button onClick = {this.minus}>Minus</button>\n//       </div>\n//     )\n  \n//     }\n// }\n\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  componentDidMount(){\n    setTimeout(() => {\n      this.setState({ isLoading: false});\n    }, 6000);\n  }\n  render() {\n    const { isLoading } = this.state;\n  return <div>{isLoading ? \"Loading...\" : \"We are ready\"}</div>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}